name: CI

# Updated for modern Android build system (AGP 8.7.3, Gradle 8.11.1, Java 17+)
# Tests multiple Java versions: 17 (minimum required), 21 (newer)
# See commits: b83baf99, 6a5d9314, 44ea3501, 4c5ab7cf

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: Build with Java ${{ matrix.java-version }} on ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04, macos-latest]
        java-version: [17, 21]
      fail-fast: false

    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 35
        build-tools: 35.0.0
        target: android-35

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Node.js dependencies
      run: npm ci

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Check trailing whitespace
      run: make check-trailing-whitespace

    - name: Check markdown formatting
      run: make check-md

    - name: Check code formatting
      run: make format-check

    - name: Run Checkstyle linter
      run: make checkstyle

    - name: Build debug APK
      run: make build-debug

    - name: Build release APK
      run: make build-release

    - name: Run Android lint
      run: make lint

    - name: Run tests
      run: make test

    - name: Upload APK artifacts
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk-java-${{ matrix.java-version }}-${{ matrix.os }}
        path: app/build/outputs/apk/fdroid/debug/*.apk

    - name: Upload Checkstyle results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: checkstyle-results-java-${{ matrix.java-version }}-${{ matrix.os }}
        path: app/build/reports/checkstyle/*.html

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results-java-${{ matrix.java-version }}-${{ matrix.os }}
        path: app/build/reports/lint-results*.html

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}-${{ matrix.os }}
        path: app/build/reports/tests/
